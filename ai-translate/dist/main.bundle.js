(()=>{var e,t={1069:()=>{},1638:()=>{},2668:()=>{},3776:()=>{},4688:()=>{},5340:()=>{},6089:()=>{},6437:(e,t,n)=>{"use strict";n(4788);var o=n(4451);class s{constructor(){this.progressContainer=document.querySelector(".progress-container"),this.progressFill=document.querySelector(".progress-fill"),this.progressText=document.querySelector(".progress-text"),this.progressDetails=document.querySelector(".progress-details"),this.progressBatchCounter=document.createElement("div"),this.progressBatchCounter.className="progress-batch-counter",this.progressBatchCounter.style.textAlign="center",this.progressBatchCounter.style.marginTop="5px",this.progressBatchCounter.style.fontSize="14px",this.progressBatchCounter.style.color="#666",this.progressContainer.parentNode?.insertBefore(this.progressBatchCounter,this.progressContainer.nextSibling)}updateProgress(e){const t=e.current/e.total*100;this.progressFill.style.width=`${t}%`,this.progressText.textContent=`${Math.round(t)}%`,e.text&&(this.progressDetails.textContent=e.text)}updateBatchProgress(e){const t=e.completedBatches/e.totalBatches*100;if(this.progressFill.style.width=`${t}%`,this.progressText.textContent=`${Math.round(t)}%`,this.progressBatchCounter.textContent=`批次进度: ${e.completedBatches}/${e.totalBatches}`,e.currentBatchId>0){const t=e.completedTasksInCurrentBatch/e.totalTasksInCurrentBatch*100;this.progressDetails.textContent=`当前批次 ${e.currentBatchId}/${e.totalBatches}: 完成 ${Math.round(t)}%`}}reset(){this.progressFill.style.width="0%",this.progressText.textContent="0%",this.progressDetails.textContent=""}show(){this.progressContainer.style.display="block"}hide(){this.progressContainer.style.display="none"}}class r{constructor(e){this.container=e}log(e,t="info"){if(!this.container)return;const n=document.createElement("div");n.className=`log-entry ${t}`,n.textContent=`[${(new Date).toLocaleTimeString()}] ${e}`,this.container.appendChild(n),this.container.scrollTop=this.container.scrollHeight}}class a{constructor(e){this.container=e}getExcelColumnName(e){let t="";for(;e>=0;)t=String.fromCharCode(65+e%26)+t,e=Math.floor(e/26)-1;return t}updateCellInDOM(e,t,n,o){if(!this.container)return;const s=this.container.querySelector(".table-wrapper");if(!s)return;const r=s.querySelector("table");if(!r)return;if(e<o)return;const a=r.querySelectorAll("tr");let i;for(let t=0;t<a.length;t++){const n=a[t],o=n.querySelector(".row-number");if(o&&o.textContent===(e+1).toString()){i=n;break}}if(i&&t+1<i.children.length){const e=i.children[t+1];e&&(e.textContent=n)}}renderTable(e,t){if(!this.container)return;this.container.innerHTML="";const n=document.createElement("div");n.className="table-wrapper";const o=document.createElement("table");o.className="excel-table";const{headerRows:s,rows:r}=e,a=[...s,...r],i=Math.max(...s.map((e=>e.length)),...r.map((e=>e.length))),l=document.createElement("tr"),c=document.createElement("th");l.appendChild(c);for(let e=0;e<i;e++){const t=document.createElement("th");t.textContent=this.getExcelColumnName(e),t.className="column-header",l.appendChild(t)}o.appendChild(l),a.forEach(((e,n)=>{const r=document.createElement("tr");if(1!==n&&n<6)return void(r.style.display="none");const a=document.createElement("td");a.textContent=(n+1).toString(),a.className="row-number",r.appendChild(a);for(let o=0;o<i;o++){const a=document.createElement(n<s.length?"th":"td");a.textContent=e[o]||"",n>=s.length&&(a.contentEditable="true"),a.addEventListener("input",(()=>{t(n,o,a.textContent||"")})),r.appendChild(a)}o.appendChild(r)})),n.appendChild(o),this.container.appendChild(n),this.addTableStyles()}addTableStyles(){const e="fixed-table-style";if(!document.getElementById(e)){const t=document.createElement("style");t.id=e,t.textContent="\n                .table-wrapper {\n                    position: relative;\n                    overflow: auto;\n                    height: 99vh;\n                    max-width: 100%;\n                    border: 1px solid #ccc;\n                    margin: 1px;\n                    scroll-padding-top: 40px; /* 添加滚动填充，防止内容被固定头部遮挡 */\n                }\n                \n                .excel-table {\n                    border-collapse: collapse;\n                }\n                \n                .excel-table th, .excel-table td {\n                    border: 1px solid #ddd;\n                    padding: 8px;\n                    min-width: 100px;\n                }\n                \n                .excel-table th:first-child {\n                    position: sticky;\n                    left: 0;\n                    z-index: 3;\n                    background-color: #f2f2f2;\n                }\n                \n                .excel-table thead th {\n                    position: sticky;\n                    top: 0;\n                    z-index: 2;\n                    background-color: #f2f2f2;\n                    box-shadow: 0 1px 0 rgba(0,0,0,0.1); /* 添加底部阴影，增强视觉效果 */\n                }\n                \n                .excel-table tr:first-child th {\n                    position: sticky;\n                    top: 0;\n                    z-index: 2;\n                    background-color: #f2f2f2;\n                    box-shadow: 0 1px 0 rgba(0,0,0,0.1); /* 添加底部阴影，增强视觉效果 */\n                }\n                \n                /* 处理左上角单元格，同时固定在顶部和左侧 */\n                .excel-table tr:first-child th:first-child {\n                    position: sticky;\n                    top: 0;\n                    left: 0;\n                    z-index: 4; /* 最高层级，确保始终显示在最上层 */\n                    background-color: #f2f2f2;\n                    box-shadow: 1px 1px 0 rgba(0,0,0,0.1); /* 添加右侧和底部阴影 */\n                }\n                \n                .excel-table .row-number {\n                    position: sticky;\n                    left: 0;\n                    z-index: 1;\n                    background-color: #f2f2f2;\n                }\n            ",document.head.appendChild(t)}}}var i=n(3092),l=n(3049),c=n(1565);"undefined"!=typeof global&&(global.Headers||(global.Headers=i.Headers),global.fetch||(global.fetch=i));let h=null;console.log("创建 OllamaEmbeddingService 单例实例");const g=new class{constructor(e="http://172.16.1.65:11434",t="bge-m3:latest",n="http://172.16.0.78:6333",o="translation_embeddings",s=1024){if(h)return console.log("已经存在 OllamaEmbeddingService 实例，返回现有实例"),h;console.log("初始化 OllamaEmbeddingService"),this.ollamaUrl=e,this.modelName=t,this.collectionName=o,this.vectorSize=s,this.qdrantUrl=n,this.qdrantClient=new l.QD({url:this.qdrantUrl,checkCompatibility:!1,timeout:15e3,retries:3}),console.log(`实际使用的Qdrant URL: ${n}`),console.log(`实际使用的Ollama URL: ${e}`),h=this}async initializeCollection(){let e=2,t=1e3;for(;e>=0;)try{console.log(`尝试初始化Qdrant集合 (剩余重试: ${e})...`);if((await this.qdrantClient.getCollections()).collections.some((e=>e.name===this.collectionName))){console.log(`集合已存在: ${this.collectionName}`);try{const e=await this.qdrantClient.getCollection(this.collectionName);console.log("集合配置:",JSON.stringify(e.config,null,2)),this.checkIfCollectionNeedsRecreation(e)&&(console.log("集合配置不匹配，需要重新创建..."),await this.qdrantClient.deleteCollection(this.collectionName),console.log(`已删除旧集合: ${this.collectionName}`),await this.qdrantClient.createCollection(this.collectionName,{vectors:{vector_cn:{size:this.vectorSize,distance:"Cosine"},vector_en:{size:this.vectorSize,distance:"Cosine"}}}),console.log(`成功重新创建集合: ${this.collectionName}`))}catch(e){console.error("获取集合信息失败:",e.message)}}else console.log(`创建新集合: ${this.collectionName}, 向量维度: ${this.vectorSize}`),await this.qdrantClient.createCollection(this.collectionName,{vectors:{vector_cn:{size:this.vectorSize,distance:"Cosine"},vector_en:{size:this.vectorSize,distance:"Cosine"}}}),console.log(`成功创建集合: ${this.collectionName}`);return!0}catch(n){if(console.error(`初始化向量数据库集合失败 (剩余重试: ${e}):`,n.message),n.message.includes("ECONNREFUSED")?console.error(`无法连接到Qdrant服务，请确保Qdrant服务正在运行于: ${this.qdrantUrl}`):n.message.includes("fetch failed")&&console.error(`Qdrant服务请求失败，可能是网络问题或服务未启动: ${this.qdrantUrl}`),!(e>0))return console.error("初始化向量数据库集合失败，已达到最大重试次数"),!1;console.log(`将在 ${t/1e3} 秒后重试初始化集合...`),await new Promise((e=>setTimeout(e,t))),t*=2,e--}return!1}checkIfCollectionNeedsRecreation(e){if(!e.config?.params?.vectors?.vector_cn||!e.config?.params?.vectors?.vector_en)return console.log("集合不使用命名向量，需要重新创建"),!0;const t=e.config?.params?.vectors?.vector_cn?.size,n=e.config?.params?.vectors?.vector_en?.size;return(t!==this.vectorSize||n!==this.vectorSize)&&(console.log(`向量维度不匹配: 当前配置=${this.vectorSize}, 集合中文向量=${t}, 英文向量=${n}`),!0)}async generateEmbedding(e){try{if(!e||"string"!=typeof e||""===e.trim())throw console.error("无效的文本输入:",e),new Error("无效的文本输入");const t={model:this.modelName,prompt:e.trim()};console.log(`向Ollama发送嵌入请求 - 模型: ${this.modelName}, 文本长度: ${e.length}`),console.log("嵌入请求体:",JSON.stringify(t,null,2));const n=await i(`${this.ollamaUrl}/api/embeddings`,{method:"POST",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)});if(!n.ok){const e=await n.text();throw console.error(`嵌入API错误 - 状态码: ${n.status}, 错误信息:`,e),new Error(`嵌入API错误: ${n.status}`)}const o=await n.text(),s=JSON.parse(o);if(console.log(`嵌入响应数据 - 向量长度: ${s.embedding?s.embedding.length:"undefined"}`),!s.embedding||!Array.isArray(s.embedding))throw console.error("嵌入响应格式错误:",s),new Error("嵌入响应格式错误");return{embedding:s.embedding}}catch(e){throw console.error("生成嵌入向量失败:",e),e}}async storeEmbedding(e,t){try{const n=await this.generateEmbedding(e);if(null===n)return console.error("生成嵌入向量失败，无法存储"),{success:!1,id:null};const o=c.randomUUID();return await this.qdrantClient.upsert(this.collectionName,{wait:!0,points:[{id:o,vector:n.embedding,payload:{text:e,...t}}]}),console.log(`成功存储嵌入向量: ${o}, 类型: ${t.type||"未指定"}`),{success:!0,id:o}}catch(e){return console.error("存储嵌入向量失败:",e),{success:!1,id:null}}}async storeEntryVectors(e){try{if(!e||!e.Chinese)throw console.error("无效的条目:",e),new Error("条目必须包含中文字段");const t=c.randomUUID();let n=null;try{n=await this.generateEmbedding(e.Chinese)}catch(e){throw console.error("生成中文嵌入失败:",e.message),new Error(`生成中文嵌入失败: ${e.message}`)}let o=null;if(e.English&&""!==e.English.trim())try{o=await this.generateEmbedding(e.English)}catch(e){console.error("生成英文嵌入失败:",e.message)}const s={vector_cn:n.embedding};o&&(s.vector_en=o.embedding);const r={Chinese:e.Chinese,English:e.English||"",Japanese:e.Japanese||"",Korean:e.Korean||"",Spanish:e.Spanish||"",French:e.French||"",German:e.German||"",Russian:e.Russian||"",Thai:e.Thai||"",Italian:e.Italian||"",Indonesian:e.Indonesian||"",Portuguese:e.Portuguese||""};return await this.qdrantClient.upsert(this.collectionName,{points:[{id:t,vectors:s,payload:r}]}),console.log(`成功存储向量 ID: ${t}`),{success:!0,id:t}}catch(e){return console.error("存储条目向量失败:",e.message),{success:!1,error:e.message}}}async updateEntryVectors(e,t){try{if(!e||!t)return console.error("更新向量失败: 缺少条目或ID"),{success:!1,error:"缺少条目或ID"};console.log(`更新向量 ID: ${t}, 条目: "${e.Chinese||"未知"}"`);let n=null;if(e.Chinese&&""!==e.Chinese.trim())try{n=(await this.generateEmbedding(e.Chinese)).embedding}catch(e){console.error("生成中文向量失败:",e.message)}let o=null;if(e.English&&""!==e.English.trim())try{o=(await this.generateEmbedding(e.English)).embedding}catch(e){console.error("生成英文向量失败:",e.message)}if(!n&&!o)return console.error("无法为条目生成向量嵌入:",e.Chinese||e.English||"未知条目"),{success:!1,error:"无法生成向量嵌入"};const s={Chinese:e.Chinese||"",English:e.English||"",Japanese:e.Japanese||"",Korean:e.Korean||"",Spanish:e.Spanish||"",French:e.French||"",German:e.German||"",Russian:e.Russian||"",Thai:e.Thai||"",Italian:e.Italian||"",Indonesian:e.Indonesian||"",Portuguese:e.Portuguese||""},r={};n&&(r.vector_cn=n),o&&(r.vector_en=o);const a={id:t,vectors:r,payload:s};return await this.qdrantClient.upsert(this.collectionName,{wait:!0,points:[a]}),console.log(`成功更新向量 ID: ${t}`),{success:!0,id:t}}catch(e){return console.error("更新向量失败:",e.message),{success:!1,error:e.message}}}async testService(){try{console.log("开始测试嵌入服务..."),await this.checkQdrantConnection();const e="这是一个测试文本，用于验证嵌入服务是否正常工作。";console.log(`测试文本: "${e}"`);const t=await this.generateEmbedding(e);console.log(`成功生成嵌入向量，维度: ${t.embedding.length}`);const n=await this.qdrantClient.getCollections();console.log("Qdrant集合列表:",JSON.stringify(n,null,2));const o=n.collections.some((e=>e.name===this.collectionName));return console.log(`集合 ${this.collectionName} ${o?"存在":"不存在"}`),console.log("嵌入服务测试成功"),{success:!0,embeddingDimension:t.embedding.length,collections:n.collections.map((e=>e.name))}}catch(e){return console.error("嵌入服务测试失败:",e),{success:!1,error:e.message||"未知错误"}}}async checkQdrantConnection(){let e=2,t=1e3;for(;e>=0;)try{console.log(`检查Qdrant连接... (剩余重试次数: ${e})`);const t=await this.qdrantClient.getCollections();return console.log("Qdrant连接成功，可用集合:",t.collections?.map((e=>e.name)).join(", ")||"无"),!0}catch(n){if(console.error(`Qdrant连接尝试失败 (剩余重试: ${e}):`,n.message),n.message.includes("ECONNREFUSED")?console.error(`无法连接到Qdrant服务，请确保Qdrant服务正在运行于: ${this.qdrantUrl}`):n.message.includes("fetch failed")&&console.error(`Qdrant服务请求失败，可能是网络问题或服务未启动: ${this.qdrantUrl}`),!(e>0))return console.error("Qdrant连接失败，已达到最大重试次数"),!1;console.log(`将在 ${t/1e3} 秒后重试...`),await new Promise((e=>setTimeout(e,t))),t*=2,e--}return!1}async searchSimilar(e,t="chinese",n=5){try{console.log(`开始搜索相似条目 - 文本: "${e}", 语言: ${t}, 限制: ${n}`);const o=await this.generateEmbedding(e);if(!o||!o.embedding)return console.error("生成嵌入失败，无法执行搜索"),[];console.log(`成功生成嵌入向量，维度: ${o.embedding.length}`);const s="string"==typeof t&&t.toLowerCase().includes("english"),r=s?"vector_en":"vector_cn";console.log(`使用向量字段: ${r}, 语言参数: ${t}, 是否英语: ${s}`);let a=[];try{a=await this.qdrantClient.search(this.collectionName,{vector:{name:r,vector:o.embedding},limit:1,with_payload:!0}),console.log(`搜索完成，找到 ${a?.length||0} 个结果`)}catch(e){if(console.error("Qdrant搜索失败:",e.message),e.message.includes("ECONNREFUSED"))console.error(`无法连接到Qdrant服务，请确保Qdrant服务正在运行于: ${this.qdrantUrl}`);else if(e.message.includes("fetch failed"))console.error(`Qdrant服务请求失败，可能是网络问题或服务未启动: ${this.qdrantUrl}`);else if(e.message.includes("collection not found")){console.error(`集合 "${this.collectionName}" 不存在，请先创建集合`);try{console.log(`尝试创建集合 "${this.collectionName}"...`),await this.initializeCollection()}catch(e){console.error("创建集合失败:",e.message)}}return e.data&&e.data.status&&e.data.status.error&&console.error("Qdrant搜索失败:",e.data.status.error),[]}if(!a||0===a.length)return console.log("未找到相似结果"),[];const i=a.map((e=>{const t=e.payload||{};let n=e.score;return{id:e.id,Chinese:t.Chinese||"",English:t.English||"",Japanese:t.Japanese||"",Korean:t.Korean||"",Spanish:t.Spanish||"",French:t.French||"",German:t.German||"",Russian:t.Russian||"",Thai:t.Thai||"",Italian:t.Italian||"",Indonesian:t.Indonesian||"",Portuguese:t.Portuguese||"",similarity:n}}));return console.log(`返回 ${i.length} 个处理后的结果`),i}catch(e){return console.error("搜索相似条目失败:",e.message),[]}}calculateCosineSimilarity(e,t){if(!e||!t||e.length!==t.length)return 0;let n=0,o=0,s=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r],o+=e[r]*e[r],s+=t[r]*t[r];return o=Math.sqrt(o),s=Math.sqrt(s),0===o||0===s?0:n/(o*s)}async deleteEmbedding(e){try{return await this.qdrantClient.delete(this.collectionName,{wait:!0,points:[e]}),!0}catch(e){return console.error("删除嵌入向量失败:",e),!1}}async addToVectorStore(e,t="chinese",n={}){try{if(!e||"string"!=typeof e||""===e.trim())throw console.error("添加到向量存储的文本为空"),new Error("文本为空");console.log(`添加文本到向量存储: "${e.substring(0,30)}${e.length>30?"...":""}", 语言: ${t}`);const o=await this.generateEmbedding(e);if(!o)throw new Error("无法生成嵌入向量");const s=c.randomUUID();return await this.qdrantClient.upsert(this.collectionName,{points:[{id:s,vector:o.embedding,payload:{text:e,...n}}]}),console.log(`成功添加文本到向量存储，ID: ${s}`),s}catch(e){throw console.error("添加文本到向量存储失败:",e),e}}async deleteVector(e){try{return e?(console.log(`删除向量: ${e}`),await this.checkQdrantConnection()?(await this.qdrantClient.delete(this.collectionName,{points:[e]}),console.log(`成功删除向量: ${e}`),!0):(console.error("Qdrant服务不可用，无法删除向量"),!1)):(console.error("删除向量失败: ID为空"),!1)}catch(e){return console.error(`删除向量失败: ${e.message}`),!1}}};console.log("OllamaEmbeddingService 单例实例创建完成");class d{static getSourceLanguages(){return["Chinese","English"]}static getSourceLanguageConfig(){return{Chinese:"Chinese",English:"English"}}static getLanguageMappings(){return[{columnHeader:"英语",targetLang:"English"},{columnHeader:"日语",targetLang:"Japanese"},{columnHeader:"韩语",targetLang:"Korean"},{columnHeader:"西班牙语",targetLang:"Spanish"},{columnHeader:"法语",targetLang:"French"},{columnHeader:"德语",targetLang:"German"},{columnHeader:"俄语",targetLang:"Russian"},{columnHeader:"泰语",targetLang:"Thai"},{columnHeader:"意大利语",targetLang:"Italian"},{columnHeader:"印尼语",targetLang:"Indonesian"},{columnHeader:"葡萄牙语",targetLang:"Portuguese"},{columnHeader:"越南语",targetLang:"Vietnamese"},{columnHeader:"繁体中文",targetLang:"TraditionalChinese"}]}static getLanguageDisplayName(e){return e}static getApiLanguageCode(e){return e?{zh:"Chinese",en:"English",ja:"Japanese",ko:"Korean",es:"Spanish",fr:"French",de:"German",ru:"Russian",th:"Thai",it:"Italian",id:"Indonesian",pt:"Portuguese","zh-TW":"TraditionalChinese","zh-HK":"TraditionalChinese"}[e]||e:""}static findLanguageByColumnHeader(e){if(!e)return null;const t=this.getLanguageMappings();for(const n of t)if(n.columnHeader===e)return n.targetLang;return"简体中文"===e||"中文"===e?"Chinese":"繁體中文"===e||"繁体中文"===e?"TraditionalChinese":null}static getLanguageName(e){return e?{Chinese:"中文",English:"英语",Japanese:"日语",Korean:"韩语",Spanish:"西班牙语",French:"法语",German:"德语",Russian:"俄语",Thai:"泰语",Italian:"意大利语",Indonesian:"印尼语",Portuguese:"葡萄牙语",Vietnamese:"越南语",TraditionalChinese:"繁体中文"}[e]||e:""}}class u{constructor(e,t){this.apiEndpoint="https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions",this.apiKey=e||"sk-f3488cc61842433194d9ac397e52e548",this.logCallback=t||console.log,this.shouldStopTranslation=!1,this.apiKey&&console.log("已成功加载API密钥")}stopTranslation(){this.shouldStopTranslation=!0}resetStopFlag(){this.shouldStopTranslation=!1}async getTranslationMemory(e,t,n){try{if(!e||""===e.trim())return[];const o=d.getApiLanguageCode(t),s=d.getApiLanguageCode(n),r="Chinese"===o?"chinese":"english";try{const t=await g.searchSimilar(e,r,3);if(!t||0===t.length)return console.log("未找到相似的翻译记忆"),[];const n=o,a=s;console.log(`构建翻译记忆 - 源语言字段: ${n}, 目标语言字段: ${a}`);const i=[];for(const e of t){if(!e){console.log("跳过翻译记忆: 条目为空");continue}console.log("翻译记忆条目:",JSON.stringify(e));const t=e[n]||"",o=e[a]||"";t&&o&&""!==t.trim()&&""!==o.trim()?(i.push({source:t,target:o}),console.log(`添加翻译记忆: ${t} -> ${o}`)):(t&&""!==t.trim()||console.log("跳过翻译记忆: 源语言字段为空"),o&&""!==o.trim()||console.log(`跳过翻译记忆: 目标语言字段为空, 条目中的字段: ${Object.keys(e).join(", ")}`))}return console.log(`找到 ${i.length} 条翻译记忆`),i}catch(e){return console.error("向量搜索失败，将跳过翻译记忆匹配:",e.message),[]}}catch(e){return console.error("获取翻译记忆失败:",e),[]}}async translateBatch(e,t){try{if(!e||!e.tasks||!Array.isArray(e.tasks)||0===e.tasks.length)return console.error("错误: 无效的批量翻译任务",e),this.logCallback("错误: 无效的批量翻译任务","error"),!1;const n=e.tasks.map((e=>e.rowIndex+3)),o=Math.min(...n),s=Math.max(...n),r=o===s?`第 ${o} 行`:`第 ${o} 行到第 ${s} 行`,a=t||"zh";if(!e.tasks[0].targetLang&&!e.tasks[0].targetLanguage&&!e.tasks[0].to)return console.error("错误: 目标语言未定义",e.tasks[0]),this.logCallback("错误: 目标语言未定义","error"),!1;const l=e.tasks[0].targetLanguage||e.tasks[0].targetLang||e.tasks[0].to||"en";this.logCallback(`开始翻译批次 ${e.batchId} - ${a} 到 ${l} - ${r} - ${e.tasks.length}个任务`,"info"),(!this.apiKey||"string"==typeof this.apiKey&&""===this.apiKey.trim())&&(this.apiKey="sk-f3488cc61842433194d9ac397e52e548",console.log("从环境变量获取到API密钥"));const c=e.tasks.filter((e=>{try{if("string"!=typeof e.text){if(console.error("警告: 任务文本不是字符串，类型为 "+typeof e.text),null===e.text||void 0===e.text)return!1;e.text=String(e.text)}return""!==e.text.trim()}catch(t){return console.error("过滤任务时出错:",t,e),!1}}));if(0===c.length)return this.logCallback("批次中没有有效的翻译任务","warning"),!1;if(this.shouldStopTranslation)return console.log("翻译被用户停止"),this.logCallback("翻译被用户停止","warning"),!1;try{if(0===c.length)return this.logCallback("没有有效的翻译任务","warning"),!1;if(!c[0].targetLanguage&&!c[0].targetLang&&!c[0].to)return console.error("错误: 目标语言未定义",c[0]),this.logCallback("错误: 目标语言未定义","error"),!1;console.log(`翻译批次 - 目标语言: ${c[0].targetLanguage||c[0].targetLang||c[0].to}, 共${c.length}个任务`);const n=c[0].targetLanguage||c[0].targetLang||c[0].to;if(console.log(`翻译批次 - 目标语言: ${n}, 共${c.length}个任务`),1===c.length){const n=c[0],o=await this.translateSingle(n,t);return e.success=o,o}const o=c.map(((e,t)=>({id:t,text:e.text}))),s={model:"deepseek-r1",messages:[{role:"system",content:`你是一个专业的翻译助手。请将以下${d.getLanguageName(a)}文本翻译成${d.getLanguageName(n)}。\n\n我将提供一个JSON格式的数组，其中包含多个对象，每个对象有id和text字段。请将每个对象的text字段翻译成${d.getLanguageName(n)}，并返回一个新的JSON格式数组，包含原始id和翻译后的文本。\n\n返回格式应为: [{"id": 0, "translation": "翻译结果1"}, {"id": 1, "translation": "翻译结果2"}, ...]\n\n只返回翻译结果的JSON数组，不要添加任何解释或额外内容。重要：不要翻译特殊标记<color=#xxxxxx>,</color>,//n 等，这些是格式标记或特殊字符，应原样保留。`},{role:"user",content:JSON.stringify(o)}],temperature:.8,max_tokens:8e3};console.log("发送翻译请求体:",JSON.stringify(s,null,2));const r=await i(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${"string"==typeof this.apiKey?this.apiKey.trim():this.apiKey}`,Accept:"application/json"},body:JSON.stringify(s)});if(!r.ok){const e=await r.text();throw console.error(`翻译API错误 - 状态码: ${r.status}, 错误信息:`,e),this.logCallback(`翻译API错误: ${r.status} - ${e}`,"error"),new Error(`翻译API错误: ${r.status}`)}const l=await r.text();console.log("API原始响应:",l);const h=JSON.parse(l);if(console.log("解析后的响应数据:",JSON.stringify(h,null,2)),!h.choices?.[0]?.message?.content)throw console.error("翻译返回数据格式错误:",h),this.logCallback("翻译返回数据格式错误","error"),new Error("翻译返回数据格式错误");const g=h.choices[0].message.content;console.log("原始翻译结果:",g);let u=[];try{const e=g.match(/\[\s*\{.*\}\s*\]/s),t=e?e[0]:g;u=JSON.parse(t),console.log(`成功解析JSON翻译结果，包含 ${u.length} 个条目`)}catch(e){throw console.error("解析JSON翻译结果失败:",e),this.logCallback(`解析翻译结果失败: ${e.message}`,"error"),new Error(`解析翻译结果失败: ${e.message}`)}const p={};for(const e of u)void 0!==e.id&&e.translation&&(p[e.id]=e.translation,console.log(`解析翻译结果 - ID ${e.id}: ${e.translation}`));let m=0;for(let e=0;e<c.length;e++)void 0!==p[e]?(c[e].translation=p[e],console.log(`翻译成功 - 行号: ${c[e].rowIndex+1}, 译文: ${c[e].translation}`),m++):console.log(`未找到ID ${e} 的翻译结果`);if(m<c.length){const e=c.length-m;this.logCallback(`警告: ${e} 个任务没有收到翻译结果`,"warning")}return e.success=!0,!0}catch(t){return console.error(`批量翻译失败 - 批次 ${e.batchId}`,t),console.error("批次任务详情:",e.tasks.map((e=>({rowIndex:e.rowIndex,text:e.text,textType:typeof e.text})))),this.logCallback(`翻译失败: ${t.message}`,"error"),e.success=!1,!1}}catch(e){return console.error("翻译批次失败:",e),this.logCallback(`翻译失败: ${e.message}`,"error"),!1}}async translateSingle(e,t){try{const n=t||("zh"===e.from?"Chinese":"English"),o=e.targetLanguage||e.targetLang||e.to||"English";console.log(`开始单个翻译 - 源语言: ${n}, 目标语言: ${o}, 文本: ${e.text}`);const s=await this.getTranslationMemory(e.text,n,o),r={model:"deepseek-r1",messages:[{role:"system",content:`你是一个专业的翻译助手。请将以下${d.getLanguageName(n)}文本翻译成${d.getLanguageName(o)}，只返回翻译结果，不要添加任何解释或额外内容。`},{role:"user",content:e.text}],temperature:.3,max_tokens:2e3};if(s&&s.length>0){let e="参考以下翻译记忆进行翻译:\n";s.forEach(((t,n)=>{e+=`参考${n+1}: ${t.source} => ${t.target}\n`})),r.messages[0].content=e+r.messages[0].content,console.log(`使用 ${s.length} 条翻译记忆`)}console.log("发送单个翻译请求体:",JSON.stringify(r,null,2));const a=await i(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${"string"==typeof this.apiKey?this.apiKey.trim():this.apiKey}`,Accept:"application/json"},body:JSON.stringify(r)});if(!a.ok){const e=await a.text();throw console.error(`单个翻译API错误 - 状态码: ${a.status}, 错误信息:`,e),this.logCallback(`翻译API错误: ${a.status} - ${e}`,"error"),new Error(`翻译API错误: ${a.status}`)}const l=await a.text();console.log("单个翻译API原始响应:",l);const c=JSON.parse(l);if(console.log("单个翻译解析后的响应数据:",JSON.stringify(c,null,2)),!c.choices?.[0]?.message?.content)throw console.error("翻译返回数据格式错误:",c),this.logCallback("翻译返回数据格式错误","error"),new Error("翻译返回数据格式错误");const h=c.choices[0].message.content;return e.text="string"==typeof h?h.trim():String(h),console.log(`单个翻译成功 - 行号: ${e.rowIndex+1}, 译文: ${e.text}`),!0}catch(e){return console.error("单个翻译失败:",e),this.logCallback(`翻译失败: ${e.message}`,"error"),!1}}}new u;class p{constructor(e,t,n){this.apiKey=e,this.log=t,this.progressBar=n,this.shouldStopTranslation=!1}stopTranslation(){this.shouldStopTranslation=!0}createBatches(e,t){const n=[];for(let o=0;o<e.length;o+=t)n.push(e.slice(o,o+t));return n}prepareTranslationTasks(e,t,n){const o=[];for(let s=0;s<e.length;s++){const r=e[s],a=r[t];if(a&&"string"==typeof a&&""!==a.trim())for(const e of n){const n=e.index,i=e.targetLang||e.langCode,l=r[n];l&&"string"==typeof l&&""!==l.trim()||o.push({rowIndex:s,sourceColumnIndex:t,targetColumnIndex:n,targetLang:i,text:a})}}return o}organizeTasksIntoBatches(e,t=100){const n={};for(const t of e){const e=t.targetLang;n[e]||(n[e]=[]),n[e].push(t)}const o=[];let s=1;for(const e in n){const r=n[e],a=this.createBatches(r,t);for(const e of a)o.push({batchId:s++,tasks:e,success:!1,completed:0})}return o}async executeTranslation(e,t,n,o,s){try{this.log("正在收集需要翻译的内容...","info");const r=this.prepareTranslationTasks(e,t,o);if(0===r.length)return void this.log("没有找到需要翻译的内容","warning");this.log(`找到 ${r.length} 个需要翻译的单元格`,"info");const a=this.organizeTasksIntoBatches(r),i=new u(this.apiKey,this.log),l=a.length;let c=0;this.log(`开始处理 ${l} 个翻译批次`,"info");for(let t=0;t<a.length;t++){if(this.shouldStopTranslation){this.log("翻译已被用户停止","warning");break}const o=a[t],r=t+1;this.progressBar.updateBatchProgress({completedBatches:c,totalBatches:l,currentBatchId:r,completedTasksInCurrentBatch:0,totalTasksInCurrentBatch:o.tasks.length});try{const t=await i.translateBatch(o,n);if(c++,this.progressBar.updateBatchProgress({completedBatches:c,totalBatches:l,currentBatchId:0,completedTasksInCurrentBatch:o.tasks.length,totalTasksInCurrentBatch:o.tasks.length}),t){let t=0,n=0;for(const r of o.tasks){let o=r.translation;o&&"string"==typeof o&&""!==o.trim()?(e[r.rowIndex][r.targetColumnIndex]=o,s(r.rowIndex+2,r.targetColumnIndex,o),t++):n++}n>0&&this.log(`警告: ${n} 个单元格未获得翻译结果`,"warning")}this.log(`批次 ${r}/${l} 完成`,"success")}catch(e){this.log(`批次 ${r}/${l} 失败: ${e.message}`,"error")}}this.log(`翻译任务完成: ${c}/${l} 个批次`,c===l?"success":"warning")}catch(e){this.log(`翻译过程出错: ${e.message}`,"error"),console.error("翻译过程出错:",e)}}}class m{static _eventsInitialized=!1;constructor(){console.log("ExcelTranslator 构造函数被调用"),this.tableOutput=document.getElementById("tableOutput"),this.logOutput=document.getElementById("logOutput"),this.logger=new r(this.logOutput),this.progressBar=new s,this.tableRenderer=new a(this.tableOutput),this.data={},this.currentSheet=null,this.currentFileName="",this.apiKey="",this.shouldStopTranslation=!1,this.sourceLangSelect=null,this.apiKey="sk-f3488cc61842433194d9ac397e52e548",console.log("已从环境变量加载API密钥"),this.initializeUI(),this.initializeEventListeners()}initializeUI(){this.progressBar.show(),this.progressBar.updateProgress({current:0,total:100}),this.progressBar.hide();const e=document.getElementById("stopTranslateBtn");if(e){const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",(()=>{this.shouldStopTranslation=!0,t.disabled=!0,this.logger.log("正在停止翻译...","warning")}))}}initializeEventListeners(){if(console.log("initializeEventListeners 被调用",(new Error).stack),m._eventsInitialized)return void console.log("事件监听器已初始化，跳过重复注册");const e=document.getElementById("fileInput"),t=document.getElementById("uploadBtn"),n=document.getElementById("translateBtn"),o=document.getElementById("exportBtn"),s=document.getElementById("actionButtons");this.sourceLangSelect=document.getElementById("sourceLang"),console.log("找到的UI元素:",{fileInput:!!e,uploadBtn:!!t,translateBtn:!!n,exportBtn:!!o}),t&&(console.log("为uploadBtn添加点击事件监听器"),t.addEventListener("click",(()=>{console.log("uploadBtn被点击"),e?.click()}))),e&&(console.log("为fileInput添加change事件监听器"),e.addEventListener("change",(e=>{console.log("fileInput change事件触发"),this.handleFileSelect(e),s&&(s.style.display="block")}))),n&&(console.log("为translateBtn添加点击事件监听器"),n.addEventListener("click",(()=>{console.log("translateBtn被点击"),this.handleTranslateClick()}))),o&&(console.log("为exportBtn添加点击事件监听器"),o.addEventListener("click",(()=>{console.log("exportBtn被点击"),this.exportToExcel()}))),m._eventsInitialized=!0,console.log("事件监听器初始化完成")}async handleFileSelect(e){const t=e.target.files[0];if(t)try{this.currentFileName=t.name,this.logger.log(`正在读取文件: ${t.name}`,"info"),this.progressBar.show(),this.data=await function(e){return new Promise(((t,n)=>{const s=new FileReader;s.onload=e=>{try{const n=e.target?.result,s=o.read(n,{type:"binary"}),r={};s.SheetNames.forEach((e=>{const t=s.Sheets[e],n=o.utils.sheet_to_json(t,{header:1}),a=n.slice(0,2),i=n.slice(2);r[e]={headerRows:a,rows:i}})),t(r)}catch(e){n(e)}},s.onerror=()=>{n(new Error("文件读取失败"))},s.readAsBinaryString(e)}))}(t),this.updateSheetSelector(Object.keys(this.data)),Object.keys(this.data).length>0&&(this.currentSheet=Object.keys(this.data)[0],this.displaySheet(),this.logger.log(`已加载工作表: ${this.currentSheet}`,"success")),this.autoDetectSourceLanguage()}catch(e){this.logger.log(`读取文件失败: ${e.message}`,"error"),console.error("文件读取错误:",e)}finally{this.progressBar.hide()}}autoDetectSourceLanguage(){if(!this.currentSheet||!this.data[this.currentSheet]||!this.sourceLangSelect)return;const{headerRows:e}=this.data[this.currentSheet];if(e.length<2)return;const t=e[1];for(let e=0;e<t.length;e++){const n=t[e];if("Chinese"===d.findLanguageByColumnHeader(n)){this.sourceLangSelect.value="Chinese",this.logger.log(`已自动检测到源语言列: ${n} (列 ${this.getExcelColumnName(e)})`,"info");break}}}updateSheetSelector(e){const t=document.getElementById("sheetSelector");t&&(t.innerHTML="",e.forEach((e=>{const n=document.createElement("option");n.value=e,n.textContent=e,t.appendChild(n)})),t.addEventListener("change",(()=>{this.currentSheet=t.value,this.displaySheet(),this.logger.log(`已切换到工作表: ${this.currentSheet}`,"info")})))}displaySheet(){if(!this.tableOutput||!this.currentSheet||!this.data[this.currentSheet])return void console.error("无法显示表格：",{tableOutput:!!this.tableOutput,currentSheet:this.currentSheet,hasData:!!this.data[this.currentSheet]});const e=this.data[this.currentSheet];this.tableRenderer.renderTable(e,((t,n,o)=>{if(t<e.headerRows.length)e.headerRows[t][n]=o;else{const s=t-e.headerRows.length;for(;e.rows.length<=s;)e.rows.push([]);for(;e.rows[s].length<=n;)e.rows[s].push("");e.rows[s][n]=o}}))}async handleTranslateClick(){if(!this.currentSheet||!this.data[this.currentSheet])return void this.logger.log("没有可翻译的数据","warning");const e=document.getElementById("translateBtn"),t=document.getElementById("stopTranslateBtn");if(e&&(e.style.display="none"),t&&(t.style.display="inline-block",t.disabled=!1),this.shouldStopTranslation=!1,this.progressBar.show(),this.progressBar.updateProgress({current:0,total:100}),this.apiKey="sk-f3488cc61842433194d9ac397e52e548",console.log("使用环境变量中的API密钥"),!this.apiKey)return this.logger.log("请输入API密钥","error"),e.style.display="inline-block",t.style.display="none",void this.progressBar.hide();const n=this.sourceLangSelect?.value||"Chinese",{headerRows:o,rows:s}=(d.getApiLanguageCode(n),this.data[this.currentSheet]);if(o.length<2)return this.logger.log("错误：表格缺少表头行","error"),e.style.display="inline-block",t.style.display="none",void this.progressBar.hide();const r=o[1];let a=-1;for(let e=0;e<r.length;e++){const t=r[e];if(d.findLanguageByColumnHeader(t)===d.getSourceLanguageConfig()[d.getLanguageDisplayName(n)]){a=e;break}}if(-1===a)return this.logger.log(`错误：找不到源语言(${d.getLanguageDisplayName(n)})列`,"error"),e.style.display="inline-block",t.style.display="none",void this.progressBar.hide();const i=[],l=d.getSourceLanguageConfig();for(let e=0;e<r.length;e++){if(e===a)continue;const t=r[e],o=d.findLanguageByColumnHeader(t);o&&o!==l[d.getLanguageDisplayName(n)]&&i.push({index:e,langCode:o,display:t})}if(0===i.length)return this.logger.log("错误：找不到任何目标语言列","error"),e.style.display="inline-block",t.style.display="none",void this.progressBar.hide();this.logger.log(`开始翻译，源语言: ${d.getLanguageDisplayName(n)} (列 ${this.getExcelColumnName(a)})`,"info"),this.logger.log("目标语言: "+i.map((e=>`${e.display} (列 ${this.getExcelColumnName(e.index)})`)).join(", "),"info");try{const e=new p(this.apiKey,this.logger.log.bind(this.logger),this.progressBar);if(t){const n=t.cloneNode(!0);t.parentNode.replaceChild(n,t),n.onclick=()=>{this.shouldStopTranslation=!0,e.stopTranslation(),n.disabled=!0,this.logger.log("正在停止翻译...","warning")}}await e.executeTranslation(s,a,n,i,((e,t,n)=>{this.tableRenderer.updateCellInDOM(e,t,n,o.length)}))}catch(e){console.error("翻译过程出错:",e),this.logger.log(`翻译过程出错: ${e.message||String(e)}`,"error")}finally{e.style.display="inline-block",t.style.display="none",t.disabled=!0,this.progressBar.hide()}}async exportToExcel(){if(this.currentSheet&&this.data[this.currentSheet])try{const e=function(e){const t=o.utils.book_new();return Object.entries(e).forEach((([e,n])=>{const s=[...n.headerRows,...n.rows],r=o.utils.aoa_to_sheet(s);o.utils.book_append_sheet(t,r,e)})),t}(this.data);o.writeFile(e,`${this.currentFileName.replace(".xlsx","")}_translated.xlsx`),this.logger.log("导出成功","success")}catch(e){e instanceof Error?this.logger.log(`导出失败: ${e.message}`,"error"):this.logger.log("导出失败: 未知错误","error")}else this.logger.log("没有可导出的数据","warning")}getExcelColumnName(e){return this.tableRenderer.getExcelColumnName(e)}}console.log("index.js 被加载"),window.addEventListener("DOMContentLoaded",(()=>{console.log("DOMContentLoaded 事件触发"),window.excelTranslatorInstance?console.log("已存在 ExcelTranslator 实例，不再创建新实例"):(console.log("创建新的 ExcelTranslator 实例"),window.excelTranslatorInstance=new m,console.log("ExcelTranslator 实例创建完成"))}))},7790:()=>{},7965:()=>{},8982:()=>{},9368:()=>{},9838:()=>{}},n={};function o(e){var s=n[e];if(void 0!==s)return s.exports;var r=n[e]={id:e,loaded:!1,exports:{}};return t[e].call(r.exports,r,r.exports,o),r.loaded=!0,r.exports}o.m=t,e=[],o.O=(t,n,s,r)=>{if(!n){var a=1/0;for(h=0;h<e.length;h++){for(var[n,s,r]=e[h],i=!0,l=0;l<n.length;l++)(!1&r||a>=r)&&Object.keys(o.O).every((e=>o.O[e](n[l])))?n.splice(l--,1):(i=!1,r<a&&(a=r));if(i){e.splice(h--,1);var c=s();void 0!==c&&(t=c)}}return t}r=r||0;for(var h=e.length;h>0&&e[h-1][2]>r;h--)e[h]=e[h-1];e[h]=[n,s,r]},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o.j=792,(()=>{var e={792:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var s,r,[a,i,l]=n,c=0;if(a.some((t=>0!==e[t]))){for(s in i)o.o(i,s)&&(o.m[s]=i[s]);if(l)var h=l(o)}for(t&&t(n);c<a.length;c++)r=a[c],o.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return o.O(h)},n=self.webpackChunkai_translate=self.webpackChunkai_translate||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),o.nc=void 0;var s=o.O(void 0,[121],(()=>o(6437)));s=o.O(s)})();
//# sourceMappingURL=main.bundle.js.map